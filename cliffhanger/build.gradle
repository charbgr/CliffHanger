// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

  ext {
    // Android Stuff
    build_tools_version = "26.0.2"
    compile_sdk_version = 26
    target_sdk_version = 25
    min_sdk_version = 24
    support_version = '25.2.0'
    constraint_layout_version = '1.0.2'

    // Third party libraries
    kotlin_version = '1.1.4-3'
    rxJava2_version = '2.0.6'
    rxKotlin2_version = '2.0.0-RC1'
    rxAndroid2_version = '2.0.1'
    retrofit_version = '2.2.0'
    rxBinding_version = '2.0.0'
    rxInterop_version = '0.9.2'
    timber_version = '4.5.1'
    glide_version = '3.7.0'
    dagger_version = '2.12'

    // Unit Testing
    junit_version = '4.12'
    mockitoKotlin_version = '1.1.0'
    kluent_version = '1.14'
    spek_version = '1.1.0-beta4'
    robolectric_version = '3.2.2'

    mainApplication = [

        // Android Stuff
        appCompat        : "com.android.support:appcompat-v7:$support_version",
        design           : "com.android.support:design:$support_version",
        constraintLayout : "com.android.support.constraint:constraint-layout:$constraint_layout_version",

        // Reactive
        rxJava           : "io.reactivex.rxjava2:rxjava:$rxJava2_version",
        rxKotlin         : "io.reactivex:rxkotlin:$rxKotlin2_version",
        rxAndroid        : "io.reactivex.rxjava2:rxandroid:$rxAndroid2_version",
        rxBinding        : "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxBinding_version",
        rxBindingDesign  : "com.jakewharton.rxbinding2:rxbinding-design-kotlin:$rxBinding_version",
        rxBindingRecycler: "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7-kotlin:$rxBinding_version",

        // Misc
        kotlin           : "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
        retrofit         : "com.squareup.retrofit2:retrofit:$retrofit_version",
        retrofitAdapter  : "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version",
        retrofitConverter: "com.squareup.retrofit2:converter-moshi:$retrofit_version",
        timber           : "com.jakewharton.timber:timber:$timber_version",
        glide            : "com.github.bumptech.glide:glide:$glide_version",

        dagger: [
            runtime: "com.google.dagger:dagger:$dagger_version",
            compiler: "com.google.dagger:dagger-compiler:$dagger_version",
            android: [
                runtime: "com.google.dagger:dagger-android:$dagger_version",
                supportRuntime: "com.google.dagger:dagger-android-support:$dagger_version",
                compiler: "com.google.dagger:dagger-android-processor:$dagger_version",
            ],
        ],
    ]



    unitTesting = [

        // Kotlin Stuff
        kotlinTest   : "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
        mockitoKotlin: "org.mockito:mockito-core:$mockitoKotlin_version",
        kluent       : "org.amshove.kluent:kluent:$kluent_version",
        spek         : "org.jetbrains.spek:spek-api:$spek_version",

        junit        : "junit:junit:$junit_version",

        // Misc
        robolectric  : "org.robolectric:robolectric:$robolectric_version"]
  }

  repositories {
    jcenter()
    google()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.0.0-rc2'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

def getSecrets() {
  def rootDir = project.rootDir
  def secretProperties = new File(rootDir, "secrets.properties")

  def Properties props = new Properties()
  props.load(new FileInputStream(secretProperties))
  return props
}

allprojects {
  repositories {
    jcenter()
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
